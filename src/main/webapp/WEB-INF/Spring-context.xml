<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	         http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd         
	         http://www.springframework.org/schema/mvc         
	         http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd         
	         http://www.springframework.org/schema/context         
	         http://www.springframework.org/schema/context/spring-context-3.0.xsd         
	         http://www.springframework.org/schema/aop 
	         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd       	
	         http://www.springframework.org/schema/tx 
	         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       	
	         http://www.springframework.org/schema/task        	
	         http://www.springframework.org/schema/task/spring-task-3.0.xsd 
	         http://www.springframework.org/schema/jee 
	         http://www.springframework.org/schema/jee/spring-jee-2.5.xsd 
	         http://www.springframework.org/schema/util  
	         http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	default-init-method="init" default-destroy-method="destroy"
	default-autowire="byName">
	<!-- <mvc:annotation-driven /> -->
	<context:component-scan base-package="cn.telecom.traffic" />

	<!-- <task:annotation-driven /> -->

	<jee:jndi-lookup jndi-name="java:comp/env/beans/properties/traffic"
		id="environmentPath" />

	<bean class="org.springframework.beans.factory.config.PropertiesFactoryBean"
		id="envProps">
		<property name="locations">
			<list>
				<value>classpath:messages.properties</value>
				<ref bean="environmentPath" />
			</list>
		</property>
	</bean>
	<context:property-placeholder
		properties-ref="envProps" />
	<context:annotation-config />

	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>${log4j.config.location}</value>
				<value>${log4j.refresh.interval.ms}</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/traffic" />
		<property name="resourceRef" value="true" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.c3p0.acquire_increment">1</prop>
				<prop key="hibernate.c3p0.minPoolSize">2</prop>
				<prop key="hibernate.c3p0.maxPoolSize">50</prop>
				<prop key="hibernate.c3p0.timeout">1800</prop>
				<prop key="hibernate.c3p0.max_statement">0</prop>
				<prop key="hibernate.c3p0.idle_test_period">30</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>cn.telecom.traffic.model.dao.User</value>
				<value>cn.telecom.traffic.model.dao.Traffic</value>
				<value>cn.telecom.traffic.model.dao.Order</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"></bean>
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* cn.telecom.traffic.model.managers.*.*(..))" />
	</aop:config>

</beans>